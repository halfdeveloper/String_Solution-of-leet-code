541. Reverse String II
Given a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string.

If there are fewer than k characters left, reverse all of them. 
If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and leave the other as original.
Example 1:

Input: s = "abcdefg", k = 2
Output: "bacdfeg"
Example 2:

Input: s = "abcd", k = 2
Output: "bacd"
 

Constraints:

1 <= s.length <= 104
s consists of only lowercase English letters.
1 <= k <= 104








***********************************************************
public class Solution {
    public String reverseStr(String s, int k) {
        // guard
        if (s == null || s.length() == 0) return s;
        
        char[] cArr = s.toCharArray();
        int ptr = 0;

        while(ptr < s.length()) {
            reverseHelper(cArr, ptr, k);
            ptr += 2*k;
        }
        
        return String.valueOf(cArr);
    }
    
    
    private void reverseHelper(char[] cArr, int start, int len) {
        int end = Math.min(start + len - 1, cArr.length-1);
    
        while (start < end) {
            char tmp = cArr[start];
            cArr[start] = cArr[end];
            cArr[end] = tmp;
            start++;
            end--;
        }
    }
}

**********************************************************
